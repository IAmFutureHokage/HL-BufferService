// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.25.0
// source: internal/proto/hydrology_buffer_service.proto

package HL_BufferService

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type IcePhenomeniaState int32

const (
	IcePhenomeniaState_NONE IcePhenomeniaState = 0
	IcePhenomeniaState_TRUE IcePhenomeniaState = 1
	IcePhenomeniaState_END  IcePhenomeniaState = 2
)

// Enum value maps for IcePhenomeniaState.
var (
	IcePhenomeniaState_name = map[int32]string{
		0: "NONE",
		1: "TRUE",
		2: "END",
	}
	IcePhenomeniaState_value = map[string]int32{
		"NONE": 0,
		"TRUE": 1,
		"END":  2,
	}
)

func (x IcePhenomeniaState) Enum() *IcePhenomeniaState {
	p := new(IcePhenomeniaState)
	*p = x
	return p
}

func (x IcePhenomeniaState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IcePhenomeniaState) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_hydrology_buffer_service_proto_enumTypes[0].Descriptor()
}

func (IcePhenomeniaState) Type() protoreflect.EnumType {
	return &file_internal_proto_hydrology_buffer_service_proto_enumTypes[0]
}

func (x IcePhenomeniaState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IcePhenomeniaState.Descriptor instead.
func (IcePhenomeniaState) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{0}
}

type SnowHeight int32

const (
	SnowHeight_NULL          SnowHeight = 0
	SnowHeight_LESS_5        SnowHeight = 1
	SnowHeight_FROM_5_TO_10  SnowHeight = 2
	SnowHeight_FROM_11_TO_15 SnowHeight = 3
	SnowHeight_FROM_16_TO_20 SnowHeight = 4
	SnowHeight_FROM_21_TO_25 SnowHeight = 5
	SnowHeight_FROM_26_TO_35 SnowHeight = 6
	SnowHeight_FROM_36_TO_50 SnowHeight = 7
	SnowHeight_FROM_51_TO_70 SnowHeight = 8
	SnowHeight_MORE_70       SnowHeight = 9
)

// Enum value maps for SnowHeight.
var (
	SnowHeight_name = map[int32]string{
		0: "NULL",
		1: "LESS_5",
		2: "FROM_5_TO_10",
		3: "FROM_11_TO_15",
		4: "FROM_16_TO_20",
		5: "FROM_21_TO_25",
		6: "FROM_26_TO_35",
		7: "FROM_36_TO_50",
		8: "FROM_51_TO_70",
		9: "MORE_70",
	}
	SnowHeight_value = map[string]int32{
		"NULL":          0,
		"LESS_5":        1,
		"FROM_5_TO_10":  2,
		"FROM_11_TO_15": 3,
		"FROM_16_TO_20": 4,
		"FROM_21_TO_25": 5,
		"FROM_26_TO_35": 6,
		"FROM_36_TO_50": 7,
		"FROM_51_TO_70": 8,
		"MORE_70":       9,
	}
)

func (x SnowHeight) Enum() *SnowHeight {
	p := new(SnowHeight)
	*p = x
	return p
}

func (x SnowHeight) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SnowHeight) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_hydrology_buffer_service_proto_enumTypes[1].Descriptor()
}

func (SnowHeight) Type() protoreflect.EnumType {
	return &file_internal_proto_hydrology_buffer_service_proto_enumTypes[1]
}

func (x SnowHeight) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SnowHeight.Descriptor instead.
func (SnowHeight) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{1}
}

type PrecipitationDuration int32

const (
	PrecipitationDuration_EMPTY        PrecipitationDuration = 0
	PrecipitationDuration_LESS_1       PrecipitationDuration = 1
	PrecipitationDuration_FROM_1_TO_3  PrecipitationDuration = 2
	PrecipitationDuration_FROM_3_TO_6  PrecipitationDuration = 3
	PrecipitationDuration_FROM_6_TO_12 PrecipitationDuration = 4
	PrecipitationDuration_MORE_12      PrecipitationDuration = 5
)

// Enum value maps for PrecipitationDuration.
var (
	PrecipitationDuration_name = map[int32]string{
		0: "EMPTY",
		1: "LESS_1",
		2: "FROM_1_TO_3",
		3: "FROM_3_TO_6",
		4: "FROM_6_TO_12",
		5: "MORE_12",
	}
	PrecipitationDuration_value = map[string]int32{
		"EMPTY":        0,
		"LESS_1":       1,
		"FROM_1_TO_3":  2,
		"FROM_3_TO_6":  3,
		"FROM_6_TO_12": 4,
		"MORE_12":      5,
	}
)

func (x PrecipitationDuration) Enum() *PrecipitationDuration {
	p := new(PrecipitationDuration)
	*p = x
	return p
}

func (x PrecipitationDuration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrecipitationDuration) Descriptor() protoreflect.EnumDescriptor {
	return file_internal_proto_hydrology_buffer_service_proto_enumTypes[2].Descriptor()
}

func (PrecipitationDuration) Type() protoreflect.EnumType {
	return &file_internal_proto_hydrology_buffer_service_proto_enumTypes[2]
}

func (x PrecipitationDuration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrecipitationDuration.Descriptor instead.
func (PrecipitationDuration) EnumDescriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{2}
}

type Telegram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Datetime                   *timestamppb.Timestamp    `protobuf:"bytes,3,opt,name=datetime,proto3" json:"datetime,omitempty"`
	PostCode                   string                    `protobuf:"bytes,4,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	TelegramDate               uint32                    `protobuf:"varint,5,opt,name=telegram_date,json=telegramDate,proto3" json:"telegram_date,omitempty"`
	TelegramTime               uint32                    `protobuf:"varint,6,opt,name=telegram_time,json=telegramTime,proto3" json:"telegram_time,omitempty"`
	IsDangerous                bool                      `protobuf:"varint,7,opt,name=is_dangerous,json=isDangerous,proto3" json:"is_dangerous,omitempty"`
	WaterLevelOnTime           int32                     `protobuf:"varint,8,opt,name=water_level_on_time,json=waterLevelOnTime,proto3" json:"water_level_on_time,omitempty"`
	DeltaWaterLevel            int32                     `protobuf:"varint,9,opt,name=delta_water_level,json=deltaWaterLevel,proto3" json:"delta_water_level,omitempty"`
	WaterLevelOn_20H           int32                     `protobuf:"varint,10,opt,name=water_level_on_20h,json=waterLevelOn20h,proto3" json:"water_level_on_20h,omitempty"`
	WaterTemperature           float32                   `protobuf:"fixed32,11,opt,name=water_temperature,json=waterTemperature,proto3" json:"water_temperature,omitempty"`
	AirTemperature             int32                     `protobuf:"varint,12,opt,name=air_temperature,json=airTemperature,proto3" json:"air_temperature,omitempty"`
	IcePhenomeniaState         IcePhenomeniaState        `protobuf:"varint,13,opt,name=ice_phenomenia_state,json=icePhenomeniaState,proto3,enum=hydrologybuffer.IcePhenomeniaState" json:"ice_phenomenia_state,omitempty"`
	IcePhenomenias             []*IcePhenomenia          `protobuf:"bytes,14,rep,name=ice_phenomenias,json=icePhenomenias,proto3" json:"ice_phenomenias,omitempty"`
	IceHeight                  uint32                    `protobuf:"varint,15,opt,name=ice_height,json=iceHeight,proto3" json:"ice_height,omitempty"`
	SnowHeight                 SnowHeight                `protobuf:"varint,16,opt,name=snow_height,json=snowHeight,proto3,enum=hydrologybuffer.SnowHeight" json:"snow_height,omitempty"`
	WaterFlow                  float32                   `protobuf:"fixed32,17,opt,name=water_flow,json=waterFlow,proto3" json:"water_flow,omitempty"`
	PrecipitationValue         float32                   `protobuf:"fixed32,18,opt,name=precipitation_value,json=precipitationValue,proto3" json:"precipitation_value,omitempty"`
	PrecipitationDuration      PrecipitationDuration     `protobuf:"varint,19,opt,name=precipitation_duration,json=precipitationDuration,proto3,enum=hydrologybuffer.PrecipitationDuration" json:"precipitation_duration,omitempty"`
	IsReservoir                bool                      `protobuf:"varint,20,opt,name=is_reservoir,json=isReservoir,proto3" json:"is_reservoir,omitempty"`
	ReservoirDate              uint32                    `protobuf:"varint,21,opt,name=reservoir_date,json=reservoirDate,proto3" json:"reservoir_date,omitempty"`
	ReservoirData              *ReservoirData            `protobuf:"bytes,22,opt,name=reservoir_data,json=reservoirData,proto3" json:"reservoir_data,omitempty"`
	IsReservoirWaterInflow     bool                      `protobuf:"varint,23,opt,name=is_reservoir_water_inflow,json=isReservoirWaterInflow,proto3" json:"is_reservoir_water_inflow,omitempty"`
	IsReservoirWaterInflowDate uint32                    `protobuf:"varint,24,opt,name=is_reservoir_water_inflow_date,json=isReservoirWaterInflowDate,proto3" json:"is_reservoir_water_inflow_date,omitempty"`
	ReservoirWaterInflowData   *ReservoirWaterInflowData `protobuf:"bytes,25,opt,name=reservoir_water_inflow_data,json=reservoirWaterInflowData,proto3" json:"reservoir_water_inflow_data,omitempty"`
}

func (x *Telegram) Reset() {
	*x = Telegram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Telegram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Telegram) ProtoMessage() {}

func (x *Telegram) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Telegram.ProtoReflect.Descriptor instead.
func (*Telegram) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{0}
}

func (x *Telegram) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Telegram) GetDatetime() *timestamppb.Timestamp {
	if x != nil {
		return x.Datetime
	}
	return nil
}

func (x *Telegram) GetPostCode() string {
	if x != nil {
		return x.PostCode
	}
	return ""
}

func (x *Telegram) GetTelegramDate() uint32 {
	if x != nil {
		return x.TelegramDate
	}
	return 0
}

func (x *Telegram) GetTelegramTime() uint32 {
	if x != nil {
		return x.TelegramTime
	}
	return 0
}

func (x *Telegram) GetIsDangerous() bool {
	if x != nil {
		return x.IsDangerous
	}
	return false
}

func (x *Telegram) GetWaterLevelOnTime() int32 {
	if x != nil {
		return x.WaterLevelOnTime
	}
	return 0
}

func (x *Telegram) GetDeltaWaterLevel() int32 {
	if x != nil {
		return x.DeltaWaterLevel
	}
	return 0
}

func (x *Telegram) GetWaterLevelOn_20H() int32 {
	if x != nil {
		return x.WaterLevelOn_20H
	}
	return 0
}

func (x *Telegram) GetWaterTemperature() float32 {
	if x != nil {
		return x.WaterTemperature
	}
	return 0
}

func (x *Telegram) GetAirTemperature() int32 {
	if x != nil {
		return x.AirTemperature
	}
	return 0
}

func (x *Telegram) GetIcePhenomeniaState() IcePhenomeniaState {
	if x != nil {
		return x.IcePhenomeniaState
	}
	return IcePhenomeniaState_NONE
}

func (x *Telegram) GetIcePhenomenias() []*IcePhenomenia {
	if x != nil {
		return x.IcePhenomenias
	}
	return nil
}

func (x *Telegram) GetIceHeight() uint32 {
	if x != nil {
		return x.IceHeight
	}
	return 0
}

func (x *Telegram) GetSnowHeight() SnowHeight {
	if x != nil {
		return x.SnowHeight
	}
	return SnowHeight_NULL
}

func (x *Telegram) GetWaterFlow() float32 {
	if x != nil {
		return x.WaterFlow
	}
	return 0
}

func (x *Telegram) GetPrecipitationValue() float32 {
	if x != nil {
		return x.PrecipitationValue
	}
	return 0
}

func (x *Telegram) GetPrecipitationDuration() PrecipitationDuration {
	if x != nil {
		return x.PrecipitationDuration
	}
	return PrecipitationDuration_EMPTY
}

func (x *Telegram) GetIsReservoir() bool {
	if x != nil {
		return x.IsReservoir
	}
	return false
}

func (x *Telegram) GetReservoirDate() uint32 {
	if x != nil {
		return x.ReservoirDate
	}
	return 0
}

func (x *Telegram) GetReservoirData() *ReservoirData {
	if x != nil {
		return x.ReservoirData
	}
	return nil
}

func (x *Telegram) GetIsReservoirWaterInflow() bool {
	if x != nil {
		return x.IsReservoirWaterInflow
	}
	return false
}

func (x *Telegram) GetIsReservoirWaterInflowDate() uint32 {
	if x != nil {
		return x.IsReservoirWaterInflowDate
	}
	return 0
}

func (x *Telegram) GetReservoirWaterInflowData() *ReservoirWaterInflowData {
	if x != nil {
		return x.ReservoirWaterInflowData
	}
	return nil
}

type IcePhenomenia struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phenomen    int32 `protobuf:"varint,1,opt,name=phenomen,proto3" json:"phenomen,omitempty"` // енам надо
	IsIntensity bool  `protobuf:"varint,2,opt,name=is_intensity,json=isIntensity,proto3" json:"is_intensity,omitempty"`
	Intensity   int32 `protobuf:"varint,3,opt,name=intensity,proto3" json:"intensity,omitempty"`
}

func (x *IcePhenomenia) Reset() {
	*x = IcePhenomenia{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IcePhenomenia) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IcePhenomenia) ProtoMessage() {}

func (x *IcePhenomenia) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IcePhenomenia.ProtoReflect.Descriptor instead.
func (*IcePhenomenia) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{1}
}

func (x *IcePhenomenia) GetPhenomen() int32 {
	if x != nil {
		return x.Phenomen
	}
	return 0
}

func (x *IcePhenomenia) GetIsIntensity() bool {
	if x != nil {
		return x.IsIntensity
	}
	return false
}

func (x *IcePhenomenia) GetIntensity() int32 {
	if x != nil {
		return x.Intensity
	}
	return 0
}

type ReservoirData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeadwaterLevel        uint32  `protobuf:"varint,1,opt,name=headwater_level,json=headwaterLevel,proto3" json:"headwater_level,omitempty"`
	AverageReservoirLevel uint32  `protobuf:"varint,2,opt,name=average_reservoir_level,json=averageReservoirLevel,proto3" json:"average_reservoir_level,omitempty"`
	DownstreamLevel       uint32  `protobuf:"varint,3,opt,name=downstream_level,json=downstreamLevel,proto3" json:"downstream_level,omitempty"`
	ReservoirVolume       float32 `protobuf:"fixed32,4,opt,name=reservoir_volume,json=reservoirVolume,proto3" json:"reservoir_volume,omitempty"`
}

func (x *ReservoirData) Reset() {
	*x = ReservoirData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservoirData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservoirData) ProtoMessage() {}

func (x *ReservoirData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservoirData.ProtoReflect.Descriptor instead.
func (*ReservoirData) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{2}
}

func (x *ReservoirData) GetHeadwaterLevel() uint32 {
	if x != nil {
		return x.HeadwaterLevel
	}
	return 0
}

func (x *ReservoirData) GetAverageReservoirLevel() uint32 {
	if x != nil {
		return x.AverageReservoirLevel
	}
	return 0
}

func (x *ReservoirData) GetDownstreamLevel() uint32 {
	if x != nil {
		return x.DownstreamLevel
	}
	return 0
}

func (x *ReservoirData) GetReservoirVolume() float32 {
	if x != nil {
		return x.ReservoirVolume
	}
	return 0
}

type ReservoirWaterInflowData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Inflow float32 `protobuf:"fixed32,1,opt,name=inflow,proto3" json:"inflow,omitempty"`
	Reset_ float32 `protobuf:"fixed32,2,opt,name=reset,proto3" json:"reset,omitempty"`
}

func (x *ReservoirWaterInflowData) Reset() {
	*x = ReservoirWaterInflowData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReservoirWaterInflowData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReservoirWaterInflowData) ProtoMessage() {}

func (x *ReservoirWaterInflowData) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReservoirWaterInflowData.ProtoReflect.Descriptor instead.
func (*ReservoirWaterInflowData) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{3}
}

func (x *ReservoirWaterInflowData) GetInflow() float32 {
	if x != nil {
		return x.Inflow
	}
	return 0
}

func (x *ReservoirWaterInflowData) GetReset_() float32 {
	if x != nil {
		return x.Reset_
	}
	return 0
}

type AddTelegramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
}

func (x *AddTelegramRequest) Reset() {
	*x = AddTelegramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTelegramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTelegramRequest) ProtoMessage() {}

func (x *AddTelegramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTelegramRequest.ProtoReflect.Descriptor instead.
func (*AddTelegramRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{4}
}

func (x *AddTelegramRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type AddTelegramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Telegram     *Telegram `protobuf:"bytes,1,opt,name=telegram,proto3" json:"telegram,omitempty"`
	TelegramCode string    `protobuf:"bytes,2,opt,name=telegram_code,json=telegramCode,proto3" json:"telegram_code,omitempty"`
}

func (x *AddTelegramResponse) Reset() {
	*x = AddTelegramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddTelegramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddTelegramResponse) ProtoMessage() {}

func (x *AddTelegramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddTelegramResponse.ProtoReflect.Descriptor instead.
func (*AddTelegramResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{5}
}

func (x *AddTelegramResponse) GetTelegram() *Telegram {
	if x != nil {
		return x.Telegram
	}
	return nil
}

func (x *AddTelegramResponse) GetTelegramCode() string {
	if x != nil {
		return x.TelegramCode
	}
	return ""
}

type RemoveTelegramsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []string `protobuf:"bytes,1,rep,name=id,proto3" json:"id,omitempty"`
}

func (x *RemoveTelegramsRequest) Reset() {
	*x = RemoveTelegramsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTelegramsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTelegramsRequest) ProtoMessage() {}

func (x *RemoveTelegramsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTelegramsRequest.ProtoReflect.Descriptor instead.
func (*RemoveTelegramsRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{6}
}

func (x *RemoveTelegramsRequest) GetId() []string {
	if x != nil {
		return x.Id
	}
	return nil
}

type RemoveTelegramsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *RemoveTelegramsResponse) Reset() {
	*x = RemoveTelegramsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveTelegramsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveTelegramsResponse) ProtoMessage() {}

func (x *RemoveTelegramsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveTelegramsResponse.ProtoReflect.Descriptor instead.
func (*RemoveTelegramsResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{7}
}

func (x *RemoveTelegramsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type UpdateTelegramByInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Telegram *Telegram `protobuf:"bytes,1,opt,name=telegram,proto3" json:"telegram,omitempty"`
}

func (x *UpdateTelegramByInfoRequest) Reset() {
	*x = UpdateTelegramByInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelegramByInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelegramByInfoRequest) ProtoMessage() {}

func (x *UpdateTelegramByInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelegramByInfoRequest.ProtoReflect.Descriptor instead.
func (*UpdateTelegramByInfoRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTelegramByInfoRequest) GetTelegram() *Telegram {
	if x != nil {
		return x.Telegram
	}
	return nil
}

type UpdateTelegramByCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TelegramCode string `protobuf:"bytes,2,opt,name=telegram_code,json=telegramCode,proto3" json:"telegram_code,omitempty"`
}

func (x *UpdateTelegramByCodeRequest) Reset() {
	*x = UpdateTelegramByCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelegramByCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelegramByCodeRequest) ProtoMessage() {}

func (x *UpdateTelegramByCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelegramByCodeRequest.ProtoReflect.Descriptor instead.
func (*UpdateTelegramByCodeRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateTelegramByCodeRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTelegramByCodeRequest) GetTelegramCode() string {
	if x != nil {
		return x.TelegramCode
	}
	return ""
}

type UpdateTelegramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Telegram     *Telegram `protobuf:"bytes,1,opt,name=telegram,proto3" json:"telegram,omitempty"`
	TelegramCode string    `protobuf:"bytes,2,opt,name=telegram_code,json=telegramCode,proto3" json:"telegram_code,omitempty"`
}

func (x *UpdateTelegramResponse) Reset() {
	*x = UpdateTelegramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTelegramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTelegramResponse) ProtoMessage() {}

func (x *UpdateTelegramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTelegramResponse.ProtoReflect.Descriptor instead.
func (*UpdateTelegramResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateTelegramResponse) GetTelegram() *Telegram {
	if x != nil {
		return x.Telegram
	}
	return nil
}

func (x *UpdateTelegramResponse) GetTelegramCode() string {
	if x != nil {
		return x.TelegramCode
	}
	return ""
}

type GetTelegramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetTelegramRequest) Reset() {
	*x = GetTelegramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelegramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelegramRequest) ProtoMessage() {}

func (x *GetTelegramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelegramRequest.ProtoReflect.Descriptor instead.
func (*GetTelegramRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{11}
}

func (x *GetTelegramRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTelegramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Telegram     *Telegram `protobuf:"bytes,1,opt,name=Telegram,proto3" json:"Telegram,omitempty"`
	TelegramCode string    `protobuf:"bytes,2,opt,name=telegram_code,json=telegramCode,proto3" json:"telegram_code,omitempty"`
}

func (x *GetTelegramResponse) Reset() {
	*x = GetTelegramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelegramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelegramResponse) ProtoMessage() {}

func (x *GetTelegramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelegramResponse.ProtoReflect.Descriptor instead.
func (*GetTelegramResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{12}
}

func (x *GetTelegramResponse) GetTelegram() *Telegram {
	if x != nil {
		return x.Telegram
	}
	return nil
}

func (x *GetTelegramResponse) GetTelegramCode() string {
	if x != nil {
		return x.TelegramCode
	}
	return ""
}

type GetTelegramsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page uint32 `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
}

func (x *GetTelegramsRequest) Reset() {
	*x = GetTelegramsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelegramsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelegramsRequest) ProtoMessage() {}

func (x *GetTelegramsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelegramsRequest.ProtoReflect.Descriptor instead.
func (*GetTelegramsRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{13}
}

func (x *GetTelegramsRequest) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetTelegramsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page          uint32      `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	MaxPage       uint32      `protobuf:"varint,2,opt,name=max_page,json=maxPage,proto3" json:"max_page,omitempty"`
	Telegrams     []*Telegram `protobuf:"bytes,3,rep,name=telegrams,proto3" json:"telegrams,omitempty"`
	TelegramCodes []string    `protobuf:"bytes,4,rep,name=telegram_codes,json=telegramCodes,proto3" json:"telegram_codes,omitempty"`
}

func (x *GetTelegramsResponse) Reset() {
	*x = GetTelegramsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTelegramsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTelegramsResponse) ProtoMessage() {}

func (x *GetTelegramsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTelegramsResponse.ProtoReflect.Descriptor instead.
func (*GetTelegramsResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetTelegramsResponse) GetPage() uint32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetTelegramsResponse) GetMaxPage() uint32 {
	if x != nil {
		return x.MaxPage
	}
	return 0
}

func (x *GetTelegramsResponse) GetTelegrams() []*Telegram {
	if x != nil {
		return x.Telegrams
	}
	return nil
}

func (x *GetTelegramsResponse) GetTelegramCodes() []string {
	if x != nil {
		return x.TelegramCodes
	}
	return nil
}

type TransferToSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []string `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
}

func (x *TransferToSystemRequest) Reset() {
	*x = TransferToSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferToSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToSystemRequest) ProtoMessage() {}

func (x *TransferToSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToSystemRequest.ProtoReflect.Descriptor instead.
func (*TransferToSystemRequest) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{15}
}

func (x *TransferToSystemRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type TransferToSystemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
}

func (x *TransferToSystemResponse) Reset() {
	*x = TransferToSystemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferToSystemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferToSystemResponse) ProtoMessage() {}

func (x *TransferToSystemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_internal_proto_hydrology_buffer_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferToSystemResponse.ProtoReflect.Descriptor instead.
func (*TransferToSystemResponse) Descriptor() ([]byte, []int) {
	return file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP(), []int{16}
}

func (x *TransferToSystemResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_internal_proto_hydrology_buffer_service_proto protoreflect.FileDescriptor

var file_internal_proto_hydrology_buffer_service_proto_rawDesc = []byte{
	0x0a, 0x2d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe0, 0x09, 0x0a, 0x08, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36,
	0x0a, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61,
	0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x44, 0x61, 0x74, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0c, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x6f, 0x75, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x44, 0x61, 0x6e, 0x67, 0x65, 0x72, 0x6f, 0x75, 0x73,
	0x12, 0x2d, 0x0a, 0x13, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x74, 0x61, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x74,
	0x61, 0x57, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x2b, 0x0a, 0x12, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x6e, 0x5f, 0x32, 0x30,
	0x68, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x4f, 0x6e, 0x32, 0x30, 0x68, 0x12, 0x2b, 0x0a, 0x11, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x10, 0x77, 0x61, 0x74, 0x65, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x69, 0x72, 0x5f, 0x74, 0x65, 0x6d,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e,
	0x61, 0x69, 0x72, 0x54, 0x65, 0x6d, 0x70, 0x65, 0x72, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x55,
	0x0a, 0x14, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x69, 0x61,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x68,
	0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x49,
	0x63, 0x65, 0x50, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x69, 0x61, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x52, 0x12, 0x69, 0x63, 0x65, 0x50, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x69, 0x61,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x47, 0x0a, 0x0f, 0x69, 0x63, 0x65, 0x5f, 0x70, 0x68, 0x65,
	0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x69, 0x61, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x49, 0x63, 0x65, 0x50, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x69, 0x61, 0x52, 0x0e,
	0x69, 0x63, 0x65, 0x50, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x69, 0x61, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x63, 0x65, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x09, 0x69, 0x63, 0x65, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x3c, 0x0a,
	0x0b, 0x73, 0x6e, 0x6f, 0x77, 0x5f, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x53, 0x6e, 0x6f, 0x77, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52,
	0x0a, 0x73, 0x6e, 0x6f, 0x77, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x77, 0x61, 0x74, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x2f, 0x0a, 0x13, 0x70, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x02, 0x52, 0x12, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x5d, 0x0a, 0x16, 0x70,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x15, 0x70, 0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x12, 0x25, 0x0a,
	0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x45, 0x0a, 0x0e, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69,
	0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x68,
	0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x19, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x5f, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6c, 0x6f, 0x77, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x57, 0x61, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6c, 0x6f, 0x77, 0x12, 0x42, 0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66,
	0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x1a,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x57, 0x61, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x65, 0x12, 0x68, 0x0a, 0x1b, 0x72, 0x65,
	0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x5f, 0x77, 0x61, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x57, 0x61, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x52, 0x18, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x6f, 0x69, 0x72, 0x57, 0x61, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6c, 0x6f, 0x77,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x6c, 0x0a, 0x0d, 0x49, 0x63, 0x65, 0x50, 0x68, 0x65, 0x6e, 0x6f,
	0x6d, 0x65, 0x6e, 0x69, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65,
	0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x74, 0x79, 0x22, 0xc6, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x68, 0x65, 0x61, 0x64, 0x77, 0x61, 0x74, 0x65,
	0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x68,
	0x65, 0x61, 0x64, 0x77, 0x61, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x36, 0x0a,
	0x17, 0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f,
	0x69, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x15,
	0x61, 0x76, 0x65, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x5f, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f, 0x72, 0x65, 0x73, 0x65,
	0x72, 0x76, 0x6f, 0x69, 0x72, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x22, 0x48, 0x0a, 0x18, 0x52,
	0x65, 0x73, 0x65, 0x72, 0x76, 0x6f, 0x69, 0x72, 0x57, 0x61, 0x74, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6c, 0x6f, 0x77, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x66, 0x6c, 0x6f,
	0x77, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x69, 0x6e, 0x66, 0x6c, 0x6f, 0x77, 0x12,
	0x14, 0x0a, 0x05, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x22, 0x28, 0x0a, 0x12, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22,
	0x71, 0x0a, 0x13, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f,
	0x64, 0x65, 0x22, 0x28, 0x0a, 0x16, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x17,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x22, 0x54, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x42, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x35, 0x0a, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x22, 0x52, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x74, 0x0a, 0x16, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x0d,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x24, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x71, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x08, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x08, 0x54, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x29, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x70, 0x61,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x67, 0x65, 0x12, 0x37, 0x0a,
	0x09, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66,
	0x65, 0x72, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x09, 0x74, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d,
	0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0x2b, 0x0a,
	0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x34, 0x0a, 0x18, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x2a, 0x31, 0x0a, 0x12, 0x49, 0x63, 0x65, 0x50, 0x68, 0x65, 0x6e, 0x6f, 0x6d, 0x65, 0x6e, 0x69,
	0x61, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x54, 0x52, 0x55, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x4e,
	0x44, 0x10, 0x02, 0x2a, 0xb3, 0x01, 0x0a, 0x0a, 0x53, 0x6e, 0x6f, 0x77, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x4c, 0x45, 0x53, 0x53, 0x5f, 0x35, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x46, 0x52, 0x4f, 0x4d,
	0x5f, 0x35, 0x5f, 0x54, 0x4f, 0x5f, 0x31, 0x30, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52,
	0x4f, 0x4d, 0x5f, 0x31, 0x31, 0x5f, 0x54, 0x4f, 0x5f, 0x31, 0x35, 0x10, 0x03, 0x12, 0x11, 0x0a,
	0x0d, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x31, 0x36, 0x5f, 0x54, 0x4f, 0x5f, 0x32, 0x30, 0x10, 0x04,
	0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x32, 0x31, 0x5f, 0x54, 0x4f, 0x5f, 0x32,
	0x35, 0x10, 0x05, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x32, 0x36, 0x5f, 0x54,
	0x4f, 0x5f, 0x33, 0x35, 0x10, 0x06, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x33,
	0x36, 0x5f, 0x54, 0x4f, 0x5f, 0x35, 0x30, 0x10, 0x07, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52, 0x4f,
	0x4d, 0x5f, 0x35, 0x31, 0x5f, 0x54, 0x4f, 0x5f, 0x37, 0x30, 0x10, 0x08, 0x12, 0x0b, 0x0a, 0x07,
	0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x37, 0x30, 0x10, 0x09, 0x2a, 0x6f, 0x0a, 0x15, 0x50, 0x72, 0x65,
	0x63, 0x69, 0x70, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x4d, 0x50, 0x54, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x4c, 0x45, 0x53, 0x53, 0x5f, 0x31, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x52, 0x4f,
	0x4d, 0x5f, 0x31, 0x5f, 0x54, 0x4f, 0x5f, 0x33, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46, 0x52,
	0x4f, 0x4d, 0x5f, 0x33, 0x5f, 0x54, 0x4f, 0x5f, 0x36, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x46,
	0x52, 0x4f, 0x4d, 0x5f, 0x36, 0x5f, 0x54, 0x4f, 0x5f, 0x31, 0x32, 0x10, 0x04, 0x12, 0x0b, 0x0a,
	0x07, 0x4d, 0x4f, 0x52, 0x45, 0x5f, 0x31, 0x32, 0x10, 0x05, 0x32, 0xd6, 0x05, 0x0a, 0x16, 0x48,
	0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6c, 0x65,
	0x67, 0x72, 0x61, 0x6d, 0x12, 0x23, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79,
	0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x79, 0x64, 0x72,
	0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x41, 0x64, 0x64, 0x54,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x64, 0x0a, 0x0f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x73, 0x12, 0x27, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67,
	0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68, 0x79,
	0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x2c, 0x2e, 0x68,
	0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x42, 0x79, 0x43,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x68, 0x79, 0x64,
	0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72,
	0x61, 0x6d, 0x12, 0x23, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c,
	0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c,
	0x65, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a,
	0x0c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x24, 0x2e,
	0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61,
	0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x10, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x28,
	0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f, 0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x68, 0x79, 0x64, 0x72, 0x6f,
	0x6c, 0x6f, 0x67, 0x79, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x54, 0x6f, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x49, 0x41, 0x6d, 0x46, 0x75, 0x74, 0x75, 0x72, 0x65, 0x48, 0x6f, 0x6b, 0x61, 0x67,
	0x65, 0x2f, 0x48, 0x4c, 0x2d, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_internal_proto_hydrology_buffer_service_proto_rawDescOnce sync.Once
	file_internal_proto_hydrology_buffer_service_proto_rawDescData = file_internal_proto_hydrology_buffer_service_proto_rawDesc
)

func file_internal_proto_hydrology_buffer_service_proto_rawDescGZIP() []byte {
	file_internal_proto_hydrology_buffer_service_proto_rawDescOnce.Do(func() {
		file_internal_proto_hydrology_buffer_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_internal_proto_hydrology_buffer_service_proto_rawDescData)
	})
	return file_internal_proto_hydrology_buffer_service_proto_rawDescData
}

var file_internal_proto_hydrology_buffer_service_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_internal_proto_hydrology_buffer_service_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_internal_proto_hydrology_buffer_service_proto_goTypes = []interface{}{
	(IcePhenomeniaState)(0),             // 0: hydrologybuffer.IcePhenomeniaState
	(SnowHeight)(0),                     // 1: hydrologybuffer.SnowHeight
	(PrecipitationDuration)(0),          // 2: hydrologybuffer.PrecipitationDuration
	(*Telegram)(nil),                    // 3: hydrologybuffer.Telegram
	(*IcePhenomenia)(nil),               // 4: hydrologybuffer.IcePhenomenia
	(*ReservoirData)(nil),               // 5: hydrologybuffer.ReservoirData
	(*ReservoirWaterInflowData)(nil),    // 6: hydrologybuffer.ReservoirWaterInflowData
	(*AddTelegramRequest)(nil),          // 7: hydrologybuffer.AddTelegramRequest
	(*AddTelegramResponse)(nil),         // 8: hydrologybuffer.AddTelegramResponse
	(*RemoveTelegramsRequest)(nil),      // 9: hydrologybuffer.RemoveTelegramsRequest
	(*RemoveTelegramsResponse)(nil),     // 10: hydrologybuffer.RemoveTelegramsResponse
	(*UpdateTelegramByInfoRequest)(nil), // 11: hydrologybuffer.UpdateTelegramByInfoRequest
	(*UpdateTelegramByCodeRequest)(nil), // 12: hydrologybuffer.UpdateTelegramByCodeRequest
	(*UpdateTelegramResponse)(nil),      // 13: hydrologybuffer.UpdateTelegramResponse
	(*GetTelegramRequest)(nil),          // 14: hydrologybuffer.GetTelegramRequest
	(*GetTelegramResponse)(nil),         // 15: hydrologybuffer.GetTelegramResponse
	(*GetTelegramsRequest)(nil),         // 16: hydrologybuffer.GetTelegramsRequest
	(*GetTelegramsResponse)(nil),        // 17: hydrologybuffer.GetTelegramsResponse
	(*TransferToSystemRequest)(nil),     // 18: hydrologybuffer.TransferToSystemRequest
	(*TransferToSystemResponse)(nil),    // 19: hydrologybuffer.TransferToSystemResponse
	(*timestamppb.Timestamp)(nil),       // 20: google.protobuf.Timestamp
}
var file_internal_proto_hydrology_buffer_service_proto_depIdxs = []int32{
	20, // 0: hydrologybuffer.Telegram.datetime:type_name -> google.protobuf.Timestamp
	0,  // 1: hydrologybuffer.Telegram.ice_phenomenia_state:type_name -> hydrologybuffer.IcePhenomeniaState
	4,  // 2: hydrologybuffer.Telegram.ice_phenomenias:type_name -> hydrologybuffer.IcePhenomenia
	1,  // 3: hydrologybuffer.Telegram.snow_height:type_name -> hydrologybuffer.SnowHeight
	2,  // 4: hydrologybuffer.Telegram.precipitation_duration:type_name -> hydrologybuffer.PrecipitationDuration
	5,  // 5: hydrologybuffer.Telegram.reservoir_data:type_name -> hydrologybuffer.ReservoirData
	6,  // 6: hydrologybuffer.Telegram.reservoir_water_inflow_data:type_name -> hydrologybuffer.ReservoirWaterInflowData
	3,  // 7: hydrologybuffer.AddTelegramResponse.telegram:type_name -> hydrologybuffer.Telegram
	3,  // 8: hydrologybuffer.UpdateTelegramByInfoRequest.telegram:type_name -> hydrologybuffer.Telegram
	3,  // 9: hydrologybuffer.UpdateTelegramResponse.telegram:type_name -> hydrologybuffer.Telegram
	3,  // 10: hydrologybuffer.GetTelegramResponse.Telegram:type_name -> hydrologybuffer.Telegram
	3,  // 11: hydrologybuffer.GetTelegramsResponse.telegrams:type_name -> hydrologybuffer.Telegram
	7,  // 12: hydrologybuffer.HydrologyBufferService.AddTelegram:input_type -> hydrologybuffer.AddTelegramRequest
	9,  // 13: hydrologybuffer.HydrologyBufferService.RemoveTelegrams:input_type -> hydrologybuffer.RemoveTelegramsRequest
	11, // 14: hydrologybuffer.HydrologyBufferService.UpdateTelegramByInfo:input_type -> hydrologybuffer.UpdateTelegramByInfoRequest
	12, // 15: hydrologybuffer.HydrologyBufferService.UpdateTelegramByCode:input_type -> hydrologybuffer.UpdateTelegramByCodeRequest
	14, // 16: hydrologybuffer.HydrologyBufferService.GetTelegram:input_type -> hydrologybuffer.GetTelegramRequest
	16, // 17: hydrologybuffer.HydrologyBufferService.GetTelegrams:input_type -> hydrologybuffer.GetTelegramsRequest
	18, // 18: hydrologybuffer.HydrologyBufferService.TransferToSystem:input_type -> hydrologybuffer.TransferToSystemRequest
	8,  // 19: hydrologybuffer.HydrologyBufferService.AddTelegram:output_type -> hydrologybuffer.AddTelegramResponse
	10, // 20: hydrologybuffer.HydrologyBufferService.RemoveTelegrams:output_type -> hydrologybuffer.RemoveTelegramsResponse
	13, // 21: hydrologybuffer.HydrologyBufferService.UpdateTelegramByInfo:output_type -> hydrologybuffer.UpdateTelegramResponse
	13, // 22: hydrologybuffer.HydrologyBufferService.UpdateTelegramByCode:output_type -> hydrologybuffer.UpdateTelegramResponse
	15, // 23: hydrologybuffer.HydrologyBufferService.GetTelegram:output_type -> hydrologybuffer.GetTelegramResponse
	17, // 24: hydrologybuffer.HydrologyBufferService.GetTelegrams:output_type -> hydrologybuffer.GetTelegramsResponse
	19, // 25: hydrologybuffer.HydrologyBufferService.TransferToSystem:output_type -> hydrologybuffer.TransferToSystemResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_internal_proto_hydrology_buffer_service_proto_init() }
func file_internal_proto_hydrology_buffer_service_proto_init() {
	if File_internal_proto_hydrology_buffer_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Telegram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IcePhenomenia); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservoirData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReservoirWaterInflowData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTelegramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddTelegramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTelegramsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveTelegramsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelegramByInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelegramByCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTelegramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTelegramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTelegramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTelegramsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTelegramsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferToSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_internal_proto_hydrology_buffer_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferToSystemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_internal_proto_hydrology_buffer_service_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_internal_proto_hydrology_buffer_service_proto_goTypes,
		DependencyIndexes: file_internal_proto_hydrology_buffer_service_proto_depIdxs,
		EnumInfos:         file_internal_proto_hydrology_buffer_service_proto_enumTypes,
		MessageInfos:      file_internal_proto_hydrology_buffer_service_proto_msgTypes,
	}.Build()
	File_internal_proto_hydrology_buffer_service_proto = out.File
	file_internal_proto_hydrology_buffer_service_proto_rawDesc = nil
	file_internal_proto_hydrology_buffer_service_proto_goTypes = nil
	file_internal_proto_hydrology_buffer_service_proto_depIdxs = nil
}
